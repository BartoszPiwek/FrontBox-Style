/*
Grid

Grid system based on the flex display property.

Include style form columns and rows.

Usage:
.wrap {
	@include grid-style;
}

Style guide: Layout.Grid
*/

@mixin grid-style {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	width: 100%;

	> * {
		flex-grow: 0;
		flex-shrink: 0;
		height: auto !important;
		min-height: 1px;
	}

	&--same > * {
		display: flex;
		flex-direction: column;

		> * {
			flex: 1 1 auto;
		}
	}
}

/*
Columns

Generate `col` classes.

Parameter `$grid-breakpoints` on default is [$breakpoints](section-variables.html#variables-breakpoints).

> Responsive classes has automatic generated using [responsive](section-functions.html#functions-responsive) mixin.

Function:
// $grid-count : number
// $grid-breakpoints? : $breakpoints
@include grid($grid-count, $breakpoints?);

Usage:
@include grid(12);

Markup: grid.html

Style guide: Layout.Grid.Columns
*/

// @mixin grid($grid-count, $grid-breakpoints: $breakpoints) {
// 	@include responsive {
// 		@for $i from 1 through $grid-count {
// 			@at-root .#{&}col {
// 				&-#{$i} {
// 					flex-basis: 100% / ($grid-count / $i);
// 					max-width: 100% / ($grid-count / $i);
// 				}

// 				@if ($i != $grid-count) {
// 					&-pull-#{$i} {
// 						right: 100% / ($grid-count / $i) !important;
// 					}

// 					&-push-#{$i} {
// 						margin-left: 100% / ($grid-count / $i) !important;
// 					}

// 					&-order-#{$1} {
// 						order: $i;
// 					}
// 				}
// 			}
// 		}
// 	}
// }
